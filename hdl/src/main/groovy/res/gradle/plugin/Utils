package res.gradle.plugin

public class Utils{
    /**
     * 对map排序
     * 假如存在这种情况，me.ele.foo -> me.ele.a，me.ele.fooNew -> me.ele.b,替换会出问题因此，拿到map后需要对map做一次原类名长度的降序排序
     * @param map
     * @return
     */
    public static Map<String, String> sortMapping(Map<String, String> map) {
        List<Map.Entry<String, String>> list = new LinkedList<>(map.entrySet());
        Collections.sort(list, new Comparator<Map.Entry<String, String>>() {
            public int compare(Map.Entry<String, String> o1, Map.Entry<String, String> o2) {
                return o2.key.length() - o1.key.length();
            }
        });

        Map<String, String> result = new LinkedHashMap<>();
        for (Iterator<Map.Entry<String, String>> it = list.iterator(); it.hasNext();) {
            Map.Entry<String, String> entry = (Map.Entry<String, String>) it.next();
            result.put(entry.getKey(), entry.getValue());
        }
        return result;
    }


}