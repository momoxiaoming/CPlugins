plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'

}
//apply plugin: 'com.alibaba.arouter'
//apply from: "$rootDir/aab/aabresguard.gradle"
//apply plugin: "com.bytedance.android.aabResGuard"



android {

    signingConfigs {
        release {
            storeFile file('cdyb.jks')
            keyAlias 'cdyb'
            keyPassword 'dn123456'
            storePassword 'dn123456'
        }
    }

    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.android.plugins"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "aes_key", "\"${rootProject.AES.KEY}\""
        buildConfigField "String", "aes_iv", "\"${rootProject.AES.IV}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt') ,'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'

    implementation "com.gp.game:scribble-world:1.0.0"
    implementation "com.gp.game:webServer:1.0.4-test5"

    implementation 'com.alibaba:arouter-api:1.5.1'
    kapt 'com.alibaba:arouter-compiler:1.5.1'
}

//project.exec {
//    List<String> args = new ArrayList<>()
//    args.add("D:\\jdk1.8.0_31\\bin\\java.exe")
//    args.add("-version")
//    commandLine(args.toArray())
//}

//apply plugin: 'com.plugin.string.replace'
//byteEncrypt {
//
//    /**
//     * 是否开启debug
//     */
//    debug true
//    /**
//    /**
//     * 自定义加密实现类(需要实现IByteEncrypt接口),若未定义,将使用默认key值的aes加密
//     * 注意: 自定义的加密类需要在编译期也能找到,必须添加classpath
//     */
////    encryptImplCls "com.android.TestImpl"
//    /**
//     * 包名过滤,若此项为空,将默认全部
//     */
//    encryptPackages =["com.android.common"]
//}


//aabResGuard {
////    mappingFile = file("mapping.txt").toPath() // 用于增量混淆的 mapping 文件
//    whiteList = [ // 白名单规则
//                  "*.R.string.com.crashlytics.android.build_id",
//                  "*.R.string.google_app_id",
//                  "*.R.string.project_id",
//                  "*.R.drawable.ic_launcher",
//                  "*.R.drawable.ic_launcher_background",
//                  "*.R.mipmap.ic_launcher",
//                  "*.R.mipmap.icon",
//    ]
//    obfuscatedBundleFileName = "duplicated-app.aab" // 混淆后的文件名称，必须以 `.aab` 结尾
//    mergeDuplicatedRes = true // 是否允许去除重复资源
//    enableFilterFiles = true // 是否允许过滤文件
//    filterList = [ // 文件过滤规则
////                   "*/arm64-v8a/*",
//                   "META-INF/*",
//                   "BUNDLE-METADATA/**/proguard.map"
//    ]
//    enableFilterStrings = false // 过滤文案
//    unusedStringPath = file("unused.txt").toPath() // 过滤文案列表路径 默认在mapping同目录查找
//    languageWhiteList = ["en","en-xx"] // 保留en,en-xx,zh,zh-xx等语言，其余均删除
//}


